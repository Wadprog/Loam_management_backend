name: Continous intergration
on:
  pull_request:
    branches: [development, main]
  push:
    branches: [development, main]

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Running checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2

      - name: Use Node.js 16.6.1
        if: github.event_name == 'pull_request'
        uses: actions/setup-node@v1
        with:
          node-version: '16.6.1'

      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: npm ci --ignore-scripts
      # test:
      # runs-on: ubuntu-latest
      # steps:
      - name: check Linting
        if: github.event_name == 'pull_request'
        run: npm run lint

      - name: Run tests
        if: github.event_name == 'pull_request'
        run: npm run test
        env:
          CI: true
      - name: Upload coverage
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: prestamo_api_coverage
          path: ./coverage
      # release:
      # runs-on: ubuntu-latest
      # steps:
      - name: Create a Release
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN }}
      # build:
      # runs-on: ubuntu-latest
      # steps:
      - name: login to docker hub
        # if: github.event_name == 'push' && github.ref == 'refs/heads/development'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

   
      - name: Build and push docker image
        # if: github.event_name == 'push' && github.ref == 'refs/heads/development'
        uses: docker/build-push-action@v2
        with:
          context: ./api
          file: ./api/Dockerfile.stage
          push: true
          tags: waddprog/prestamo:${{ github.sha }}

      - name: post-build docker image
        run: |
          ls -la >> text.txt && cat text.txt
      # deploy:
      # runs-on: ubuntu-latest
      # steps:
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/development'
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{secrets.DEV_SSH_HOST}}
          key: ${{secrets.DEV_SSH_KEY}}
          username: ${{secrets.DEV_SSH_USERNAME}}
          script: |
            docker stop prestamo_api || true
            docker rm prestamo_api || true
            docker pull ${{secrets.DOCKERHUB_USERNAME}}/prestamo:${{ github.sha }}
            docker run -d --name prestamo_api -p 80:80 ${{secrets.DOCKERHUB_USERNAME}}/prestamo:${{ github.sha }}
      # fail:
      # runs-on: ubuntu-latest
      # steps:
      - name: Open issue on failure
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{github.repository}}/issues \
          --header 'authorization: Bearer ${{secrets.TOKEN}}' \
          --header 'content-type: application/json' \
          --data '{
              "title": "Issue found: ${{ github.sha }}",
              "body": "Issue automatically created by actions **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
              "assignees": ["${{ github.event.pull_request.user.login }}"]
          }'
